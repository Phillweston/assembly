assume cs:code

data segment
    ; 1975 ~ 1995
    db '1975', '1976', '1977', '1978', '1979', '1980', '1981', '1982', '1983'
    db '1984', '1985', '1986', '1987', '1988', '1989', '1990', '1991', '1992'
    db '1993', '1994', '1995'
    ; 公司总收入
    dd 16, 22, 382, 1356, 2390, 8000, 16000, 24486, 50065, 97479, 140417, 197514
    dd 345980, 590827, 803530, 1183000, 1843000, 2759000, 3753000, 4649000, 5937000
    ; 雇员人数
    dw 3, 7, 9, 13, 28, 38, 130, 220, 476, 778, 1001, 1442, 2258, 2793, 4037
    dw 5635, 8226, 11542, 14430, 15257, 17800
data ends

table segment
    ; 21 * 16 bytes
    db 21 dup(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
table ends

code segment
start:
    mov ax, data
    mov ds, ax
    mov ax, table
    mov es, ax

    mov si, 0
    mov di, 0
    mov bx, 0

    mov cx, 21
s:
; ***************************************************************************
; *                               移动年份                                  *
; ***************************************************************************
    mov ax, ds:[si]
    mov es:[di], ax
    mov ax, ds:[si + 2]
    mov es:[di + 2], ax

    mov byte ptr es:[di + 4], ' '

; ***************************************************************************
; *                              移动总收入                                 *
; ***************************************************************************
    mov ax, ds:[si + 84]
    mov es:[di + 5], ax
    mov ax, ds:[si + 86]
    mov es:[di + 7], ax
    
    mov byte ptr es:[di + 9], ' '

; ***************************************************************************
; *                              移动雇员人数                               *
; ***************************************************************************
    mov ax, ds:[bx + 168]
    mov es:[di + 10], ax

    mov byte ptr es:[di + 12], ' '

; ***************************************************************************
; *                              计算平均收入                               *
; ***************************************************************************
    ; dx 存放高 16 位
    mov dx, es:[di + 7]
    ; ax 存放低 16 位
    mov ax, es:[di + 5]
    div word ptr es:[di + 10]
    ; 将商移动到正确的位置
    mov es:[di + 13], ax

    mov byte ptr es:[di + 15], ' '

    add si, 4
    add di, 16
    add bx, 2
    loop s

    mov ax, 4c00h
    int 21h
code ends

end start
